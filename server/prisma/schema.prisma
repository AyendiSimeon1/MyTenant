
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  firstName      String
  lastName       String
  role           Role
  agencyName     String?  
  agencyDetails  Json?    
  occupation     String?  
  previousRent   String?  
  resetToken     String?  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  forms          Form[]   
}

enum Role {
  AGENT
  TENANT
}

model Form {
  id         Int      @id @default(autoincrement())
  agent      User     @relation(fields: [agentId], references: [id])
  agentId    Int
  name       String
  description String?
  content    Json
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  applications Application[] // Reverse relation: one form can have multiple applications
}

model Application {
  id                  Int           @id @default(autoincrement())
  form                Form          @relation(fields: [formId], references: [id])
  formId              Int
  tenantName          String
  tenantEmail         String
  phoneNumber         String // Assuming phone number is a string
  propertyDetails     Json?
  status              String       @default("Pending") // Providing default value
  submittedAt         DateTime     @default(now())
  additionalDocuments Json?
  referenceDetails    Json?
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  references          Reference[]  // Reverse relation: one application can have multiple references
}

model Reference {
  id                    Int         @id @default(autoincrement())
  application           Application @relation(fields: [applicationId], references: [id])
  applicationId         Int
  name                  String
  occupation            String
  relationshipToTenant String
  contactInformation    Json
  referenceId           String?     // Assuming referenceId is a string or UUID
  verified              Boolean     @default(false)
}