
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  firstName    String
  lastName     String
  role         Role
  agencyName   String?
  agencyDetails Json?
  occupation   String?
  previousRent String?
  resetToken   String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  forms        CustomForm[]  @relation("CreatedBy")
  payments     Payment[]
  applications Application[] @relation("CreatedApplications")
}

enum Role {
  AGENT
  TENANT
  ADMIN
}

model CustomForm {
  id        Int      @id @default(autoincrement())
  userId    String   // Changed from formId to userId for clarity
  title     String
  fields    Json
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], name: "CreatedBy")
}

model Application {
  id              String      @id @default(uuid())
  title           String
  logoUrl         String?
  status          String?
  createdAt       DateTime    @default(now())
  agentId         String?
  agent           User?        @relation(fields: [agentId], references: [id], name: "CreatedApplications")
  propertyAddress String?
  leaseStartDate  DateTime?
  leaseEndDate    DateTime?
  fields          Json
  uniqueLink      String?
  submissions     SubmittedApplication[] @relation("ApplicationSubmissions")
}

model SubmittedApplication {
  id              String      @id @default(uuid())
  applicationId   String
  application     Application @relation(fields: [applicationId], references: [id], name: "ApplicationSubmissions")
  fields          Json
}

model Payment {
  id        String      @id @default(uuid())
  tenantId  String
  amount    Float
  status    String      @default("pending")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  tenant    User        @relation(fields: [tenantId], references: [id]) // Changed 'user' to 'tenant' for clarity
}